@page "/Prestamos/Create"
@rendermode InteractiveServer
@inject PrestamoService prestamoService
@inject DeudoresService deudoresService
@inject CobroService cobroService
@inject NavigationManager navigation

<PageTitle>Crear Prestamo</PageTitle>
<EditForm Model="prestamos" OnValidSubmit="Crear">
	<DataAnnotationsValidator/>  
	<div class="container">
		<div class="card shadow-lg">
			<div class="card-header text-center">
				<h5><strong>Crear nuevo prestamo</strong></h5>
			</div>
			 
			<div class="card-body">

				<label class="form-label" for="id"><strong>Prestamo ID</strong></label>
				<InputNumber id="id" class="form-control" @bind-Value="prestamos.PrestamoId" readonly></InputNumber>

	
				<label class="form-label" for="Deudor"><strong>Deudor</strong></label>
					<InputSelect id="Deudor" class="form-control" @bind-Value="prestamos.DeudorId">
						<option value="0" selected disabled>Elija una Opci&oacute;n</option>
						@foreach (var deudor in deudores)
						{
							<option value="@deudor.DeudorId">@deudor.nombre</option>
						}
					</InputSelect>
					<ValidationMessage For="(() => prestamos.deudor)" />

				<label class="form-label" for="concepto"><strong>Concepto</strong></label>
				<InputText id="concepto" class="form-control" @bind-Value="prestamos.Concepto"></InputText>
				<ValidationMessage For="@(() => prestamos.Concepto)"></ValidationMessage>

				<label class="form-label" for="monto"><strong>Monto</strong></label>
				<InputNumber id="monto" class="form-control" @bind-Value="prestamos.monto"></InputNumber>
				<ValidationMessage For="@(() => prestamos.monto)"></ValidationMessage>

				
				<label class="form-label" for="monto"><strong>Balance</strong></label>
				<InputNumber id="balance" class="form-control" @bind-Value="prestamos.balance"></InputNumber>
				<ValidationMessage For="@(()=>prestamos.balance)"></ValidationMessage>

				<div class="card-footer">
					<button type="submit" class="btn btn-success bi bi-floppy-fill"> Guardar</button>
					<a href="/Prestamos/Index" class="btn btn-info bi bi-arrow-90deg-left"> Volver</a>
				</div>

			</div>
		</div>
	</div>		
   
</EditForm>

@code {

	public Prestamos prestamos { get; set; } = new Prestamos();
	public Cobros cobros { get; set; } = new Cobros();
	public CobroDetalle cobroDetalle { get; set; } = new CobroDetalle();
	public List<Deudores> deudores { get; set; } = new List<Deudores>();
	public List<Prestamos> prestamosList { get; set; } = new List<Prestamos>();

	protected override async Task OnInitializedAsync()
	{
		deudores = await deudoresService.ObtenerEntidadAsync();
	

	}

	public async Task<bool> Validar()
	{
		
		var existe = await prestamoService.Buscar(prestamos.PrestamoId);
		return existe == null;
	}

	public async Task Crear()
	{
		
		if (await Validar())
		{
			bool result = await prestamoService.Guardar(prestamos);
			if (result)
			{
				
				prestamos = new Prestamos();
				navigation.NavigateTo("/Prestamos/Index"); 
				
			}
		}
	}

	
}

   