@page "/Prestamos/Index"
@rendermode InteractiveServer
@inject PrestamoService prestamoService
@inject NavigationManager navigation


<PageTitle>Lista de Prestamos</PageTitle>
  <div class="container card shadow-lg"> 
		<div class="card-header bg-success text-white text-center">
			<h3><strong>Lista de Prestamos</strong></h3>
	  </div>
	  <div class="card-body">

			<div class="col-md-3 d-flex align-items-end justify-content-md-start mt-3 mt-md-0">
				<a href="/Prestamos/Create" class="btn btn-secondary bi bi-plus-square-fill"> Crear</a>
			</div>
		</div>

	<div class="row text-right">
		<div class="col-md-3">
			<label class="from-label" id="filtro"><strong>Filtrar por:</strong></label>
			<InputSelect for="filtro" class="form-select" @bind-Value="filtro">
				<option value="Prestamo ID">Prestamo ID</option>
				<option value="Deudor">Deudor</option>
				<option value="Concepto">Concepto</option>
				<option value="Monto">Monto</option>
			</InputSelect>
		</div>


		<div class="col-md-6">
			<label for="valorFiltro" class="form-label"><strong>B&uacute;squeda</strong></label>
			<div class="input-group">
				<InputText id="valorFiltro" @bind-Value="valorFiltro" class="form-control" placeHolder="Buscar" />
				@*@<button @onclick="Buscar" class="btn btn-outline-success bi bi-search" type="button"> Buscar</button>*@
			</div>
		</div>

		  <div class="card-body">
		<table class="table table-light table-bordered">
			<thead class="table table-striped text-center table-bordered mt-3 bg-success text-white">
				<tr>  
					<th>Prestamo ID</th>
					<th>Concepto</th>
					<th>Deudor</th>
					<th>Monto</th>
					<th>Ver</th>  
					<th>Editar</th> 
					<th>Eliminar</th>
				</tr>
			</thead>

			<tbody>

					@foreach (var prestamo in prestamos )  
					{

						<tr>

							<td class="text-center">@prestamo.PrestamoId</td>
							<td class="text-center">@prestamo.Concepto</td>
							<td class="text-center">@prestamo.deudor</td>
							<td class="text-center">@prestamo.monto</td>

							@*Iconos y botones*@
							<td class="text-center">
								<a href="/Prestamos/Details/" class="btn btn-outline-info  bi bi-eye"></a>
							</td>
							<td class="text-center">
								<a href="/Prestamos/Edit/" class="btn btn-outline-warning  bi bi-pencil-square"></a>
							</td>
							<td class="text-center">
								<a href="/Prestamos/Delete/" class="btn btn-outline-danger bi bi-trash"></a>
							</td>
						</tr>
					}
				</tbody>
			</table>
		</div>
	</div>

	</div>




@code {

	public List<Prestamos> prestamos = new List<Prestamos>();
	public List<PrestamoService> prestamosService = new List<PrestamoService>();
	public string filtro = "id";
	public string valorFiltro = "";


	protected override async Task OnInitializedAsync()
	{
		prestamos = await prestamoService.Listar(p => true);
	}

	private async Task Buscar()
		{
		if (!string.IsNullOrWhiteSpace(valorFiltro))
			{
			if (filtro == "monto" && int.TryParse(valorFiltro, out int monto))
				{
				prestamos = await prestamoService.Listar(v => v.monto == monto);
			}
			else if (filtro == "Concepto")
				{
				prestamos = await prestamoService.Listar(v => v.Concepto.Contains(valorFiltro, StringComparison.OrdinalIgnoreCase));
			}
			else if (filtro == "Deudor")
				{
				prestamos = await prestamoService.Listar(v => v.deudor.Contains(valorFiltro, StringComparison.OrdinalIgnoreCase));
			}
			
		}

	}
		

}


